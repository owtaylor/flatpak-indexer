#pyxis_url: https://catalog.redhat.com/api/containers/v1
pyxis_url: https://pyxis.engineering.redhat.com/v1
# these define a client certificate/key pair to authenticate to pyxis; this
# shows environment variable substitution with a fallback
pyxis_client_cert: ${PYXIS_CERT_DIR:${HOME}/.config/flatpak-indexer}/client.crt
pyxis_client_key: ${PYXIS_CERT_DIR:${HOME}/.config/flatpak-indexer}/client.key
# allow specifying trust root for hosts - if not found, system trust is used;
# URL to a local Redis index for caching and queuing
redis_url: ${REDIS_URL:redis://localhost:6379}
# Optional password to connect to Redis
redis_password: abc123
# name of a Koji config section
koji_config: brew
# url to the ODCS instance used for container builds
odcs_uri: https://odcs.engineering.redhat.com/
# Allowing overriding the system trust DB for https connections to certain hosts;
# if relative, the path is looked up in included certs
local_certs:
  pyxis.engineering.redhat.com: RH-IT-Root-CA.crt
  registry-proxy.engineering.redhat.com: RH-IT-Root-CA.crt
deltas_dir: ${OUTPUT_DIR:out}/deltas/
deltas_uri: https://flatpaks.local.fishsoup.net:8443/deltas/
# When extract_icons is set for an index, icons are saved to icons_dir and labels are
# rewritten in the index from a data: URL to an URL formed from icons_uri
icons_dir: ${OUTPUT_DIR:out}/icons/
icons_uri: https://flatpaks.local.fishsoup.net.com/app-icons/
# How long to wait after icons and deltas are no longer used before deleting them
clean_files_after: 1d
daemon:
        # How often to query Pyxis
        update_interval: 30m
registries:
        # key must match registry ID in Pyxis
        registry.access.redhat.com:
                # Written into the index
                public_url: https://registry.access.redhat.com/
                # Get container data from the Pyxis API
                datasource: pyxis
                # repositories: ['repo1', 'repo2'] overrides querying Pyxis for the list
        # You can also define a pseudo-registry based on koji/brew builds
        brew:
                # internal registry where builds are pushed
                public_url: https://registry-proxy.engineering.redhat.com/
                datasource: pyxis
                # Set to insert org.flatpak.commit-metadata.xa.token-type into labels
                # This causes Flatpak to get a bearer token before downloading images
                force_flatpak_token: true
indexes:
        all:
                # path to the output location - environment variable substitions
                # are possible for all strings
                output: ${OUTPUT_DIR:out}/pyxis/flatpak-latest.json
                # This creates a directory with JSON files mapping from module
                # builds to images using these module builds
                contents: ${OUTPUT_DIR:out}/pyxis/contents/latest
                registry: registry.access.redhat.com
                tag: latest
                extract_icons: True
                # When repositories have images with the same Flatpak ref,
                # how to prioritize them. Regular expressions much match
                # the full repository name. Same match prioritizes based
                # on string comparison. No match prioritizes afterwards.
                repository_priority: ['rhel11/.*', 'rhel10/.*', 'rhel9/.*']
                delta_keep: 90d
        amd64:
                output: ${OUTPUT_DIR:out}/pyxis/flatpak-latest-amd64.json
                registry: registry.access.redhat.com
                architecture: amd64
                tag: latest
                extract_icons: True
                repository_priority: ['rhel11/.*', 'rhel10/.*', 'rhel9/.*']
                delta_keep: 90d
        # These indexes index all Flatpaks found in the rhel-8.3.0-candidate tag
        # or (since the tag is suffixed by +) tags it inherits from.
        brew:
                output: ${OUTPUT_DIR:out}/brew/flatpak-rhel-8.3.0-candidate.json
                registry: brew
                tag: rhel-8.3.0-candidate
                koji_tags: [rhel-8.3.0-candidate+]
                extract_icons: True
        brew-amd64:
                output: ${OUTPUT_DIR:out}/brew/flatpak-rhel-8.3.0-candidate-amd64.json
                registry: brew
                architecture: amd64
                tag: rhel-8.3.0-candidate
                koji_tags: [rhel-8.3.0-candidate+]
                extract_icons: True
